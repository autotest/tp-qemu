- x86_cpu_flags:
    type = x86_cpu_flags
    cpu_model_flags += ",enforce,-mpx"
    kill_vm_on_error = yes
    start_vm = no
    check_host_flags = yes
    reboot_method = "shell"
    only i386, x86_64
    variants:
        - intel:
            only HostCpuVendor.intel
            variants:
                - avx512_series_flags_5:
                    # support RHEL.8.2.0 guest or later
                    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1
                    cpu_model_flags += ",+avx512-bf16"
                    flags = "avx512_bf16"
                - avx512_series_flags_2:
                    # support RHEL.7 guest or later
                    no RHEL.6
                    cpu_model_flags += ",+avx512bw,+avx512dq,+avx512vl"
                    flags = "avx512bw avx512dq avx512vl"
                - avx512_series_flags_4:
                    # support RHEL.7 guest or later
                    no RHEL.6
                    cpu_model_flags += ",+avx512vbmi2,+avx512vnni,+gfni,+vaes,+avx512bitalg,+vpclmulqdq"
                    flags = "avx512_vbmi2 avx512_vnni gfni vaes avx512_bitalg vpclmulqdq"
                - arch_capabilities:
                    # support RHEL.7 guest or later
                    no RHEL.6
                    cpu_model_flags += ",arch-capabilities=on,+mds-no"
                    flags = "arch_capabilities"
                    check_guest_cmd = "cat /sys/devices/system/cpu/vulnerabilities/mds | grep '%s'"
                    expect_items = 'Not affected'
                - test_la57:
                    # support RHEL.8 guest or later
                    no RHEL.6 RHEL.7
                    flags = "la57"
                    check_guest_cmd = 'grep "address sizes" /proc/cpuinfo | uniq | grep "%s bits virtual"'
                    variants:
                        - with_la57:
                            expect_items = 57
                            cpu_model_flags = ",+la57"
                        - without_la57:
                            expect_items = 48
                            cpu_model_flags = ",-la57"
                            no_flags = "la57"
                - intel_pt:
                    type = x86_cpu_flag_intel_pt
                    flags = "intel_pt"
                    required_qemu = [4.2.0, )
                    set_pt_mode = "rmmod kvm_intel && modprobe kvm_intel pt_mode=%s"
                    get_pt_mode = "cat /sys/module/kvm_intel/parameters/pt_mode"
                    variants:
                        - host_model:
                            auto_cpu_model = no
                            cpu_model = host
                        - default_model:
                            q35:
                                cpu_model_flags += ",intel_pt=on"
                            i440fx:
                                cpu_model_flags += ",intel_pt=on,min-level=0x14"
                - test_SPR_flags:
                    required_qemu = [5.2.0, )
                    flags = "serialize avx512_vp2intersect avx512_fp16 tsxldtrk"
                    variants:
                        - host_model:
                            auto_cpu_model = no
                            cpu_model = host
                        - default_model:
                            cpu_model_flags = ",+serialize,+avx512-vp2intersect,+avx512-fp16,+tsx-ldtrk"
                - avx_vnni:
                    # support since RHEL.8.5 kernel
                    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1 RHEL.8.2 RHEL.8.3 RHEL.8.4
                    required_qemu = [6.0.0-26, )
                    flags = "avx_vnni"
                    cpu_model_flags += ",avx_vnni=on"
                - test_SPR_AMX:
                    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1 RHEL.8.2 RHEL.8.3 RHEL.8.4 RHEL.8.5
                    required_qemu = [6.2.0-15, )
                    flags = "amx_bf16 amx_tile amx_int8"
                    variants:
                        - host_model:
                            auto_cpu_model = no
                            cpu_model = host
                        - default_model:
                            cpu_model_flags = ",+xfd,+amx-bf16,+amx-int8,+amx-tile"
        - amd:
            only HostCpuVendor.amd
            variants:
                - flag_1:
                    # support RHEL.7 guest or later
                    no RHEL.6
                    cpu_model_flags += ",+xsaveerptr,+clzero"
                    flags = "clzero xsaveerptr"
                - virt-ssbd:
                    fallback_models_map = "{'EPYC-Milan':'EPYC-Rome'}"
                    cpu_model_flags += ",+virt-ssbd"
                    flags = "ssbd"
                    guest_flags = "virt_ssbd"
                    check_guest_cmd = "cat /sys/devices/system/cpu/vulnerabilities/spec_store_bypass | grep '%s'"
                    expect_items = 'Mitigation'
                - pcid:
                    flags = "pcid invpcid"
                    variants:
                        - host_model:
                            auto_cpu_model = no
                            cpu_model = host
                        - default_model:
                            cpu_model_flags += ",+pcid,+invpcid"
                - v_spec_ctrl:
                    only Linux
                    flags = "v_spec_ctrl"
                    type = x86_cpu_v_spec_ctrl
                    supported_models = "EPYC-Milan"
                    proc_cmdline = "cat /proc/cmdline"
                    boot_option = "spec_store_bypass_disable=on"
                    test_dir = '/var/tmp'
                    source_file = 'msr-tools/master.zip'
                    guest_dir = "${test_dir}/msr-tools-master"
                    compile_cmd = "unzip -o ${test_dir}/master.zip -d ${test_dir} && cd %s && ./autogen.sh && make"
                    check_msr = './rdmsr 0x48 -a | grep 4 -c'
        - others:
            variants:
                - test_default_model:
                    no RHEL.9
                    auto_cpu_model = no
                    # will use the default variable 'default_cpu_model' in avocado-vt
                    flags = ""
                - flag_disable:
                    only Linux
                    type = x86_cpu_flag_disable
                    flags_list = "rdrand ssbd fsgsbase bmi1 bmi2 rdtscp movbe avx2 avx f16c abm kvmclock"
                    check_clock = 'cat /sys/devices/system/clocksource/clocksource0/available_clocksource'
                - test_smap:
                    # support RHEL.7 guest or later
                    no RHEL.6
                    unsupported_models = "Haswell Haswell-noTSX IvyBridge SandyBridge Westmere Nehalem Penryn Conroe"
                    unsupported_models += " Opteron_G4 Opteron_G3 Opteron_G2 Opteron_G1"
                    flags = "smap"
                - test_dies:
                    # support RHEL.7.8 guest or later but no support guest RHEL.8.0, RHEL.8.1
                    no RHEL.6 RHEL.7.1 RHEL.7.2 RHEL.7.3 RHEL.7.4 RHEL.7.5 RHEL.7.6 RHEL.7.7 RHEL.8.0 RHEL.8.1
                    type = x86_cpu_test_dies
                    # fixed qemu version: qemu-kvm-4.1.0-1.module+el8.1.0+3966+4a23dca1
                    required_qemu = [4.1.0, )
                    vcpu_maxcpus = 0
                    start_vm = no
                    check_die_id = 'cat /sys/devices/system/cpu/cpu*/topology/die_id | sort | uniq -c'
                    check_die_cpus_list = 'cat /sys/devices/system/cpu/cpu*/topology/die_cpus_list | sort | uniq -c'
                - nonstop_tsc:
                    type = x86_cpu_flag_nonstop_tsc
                    check_clock = 'cat /sys/devices/system/clocksource/clocksource0/available_clocksource | grep tsc'
                    cpu_model_flags += ",+invtsc,+tsc-adjust"
                    flags = "nonstop_tsc"
                - mce:
                    cpu_model_flags += ",mce=off"
                    flags = ""
                    no_flags = "mce"
                - test_0x40000001:
                    only Linux
                    type = x86_cpu_test_0x40000001
                    start_vm = yes
                    test_dir = '/home'
                    source_file = 'cpuid.x86_64.tar'
                    check_cpuid = './cpuid -r | grep eax=0x40000001 | uniq -c'
                - memory_protection_key:
                    flags = "pku ospke"
                    HostCpuVendor.amd:
                        no RHEL.6
                        # supported since 8.3 kernel
                        no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1 Host_RHEL.m8.u2
                    variants:
                        - @default_model:
                            cpu_model_flags += ",+pku"
                        - host_model:
                            only HostCpuVendor.amd
                            auto_cpu_model = no
                            cpu_model = host
