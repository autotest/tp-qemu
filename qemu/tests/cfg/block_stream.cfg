# Below case works stablly on QMP monitor, but have no more test with Human
# monitor, so suggest to use QMP monitor as default qemu monitor run below test
#
- block_stream:
    no raw qed vmdk
    monitors = qmp1
    monitor_type = qmp
    main_monitor = qmp1
    backup_image_before_testing = yes
    restore_image_after_testing = yes
    pre_command = "sync && echo 3 >/proc/sys/vm/drop_caches"
    post_command = "sync && echo 3 >/proc/sys/vm/drop_caches"
    wait_finished = yes
    source_image = image1
    default_speed_image1 = 0
    snapshot_chain = "images/sn1"
    # If image size increase or limited streaming please increase
    # wait_timeout to avoid wait for streaming finished timeout;
    wait_timeout = 3900
    snapshot_format = qcow2
    kill_vm = yes
    alive_check_cmd = dir
    tmp_dir = /tmp
    Windows:
        create_command = "WIN_UTILS:\coreutils\DummyCMD.exe FILE 1073741824 1"
        file_names = "C:\block_stream_test"
        test_exists_cmd = "dir FILE"
        x86_64:
            sync_cmd = "WIN_UTILS:\Sync\sync64.exe /accepteula"
        i386, i686:
            sync_cmd = "WIN_UTILS:\Sync\sync.exe /accepteula"
    Linux:
        create_command = "dd if=/dev/urandom of=FILE bs=128k count=100"
        file_names = "/home/block_stream_test"
        test_exists_cmd = "test -f FILE"
        sync_cmd = "sync"
    variants:
        - @default:
        - with_data_plane:
            only Host_RHEL.m7
            only virtio_blk virtio_scsi
            #Add a redundant iothread for testing purpose
            iothreads = "iothread0 iothread1"
            virtio_blk:
                blk_extra_params_image1 = "iothread=iothread0"
            virtio_scsi:
                no Host_RHEL.m7.u0, Host_RHEL.m7.u1, Host_RHEL.m7.u2
                bus_extra_params_image1 = "iothread=iothread0"
    variants:
        - simple_test:
            type = block_stream_simple
            variants:
                - start_stream:
                     type = block_stream
                - set_speed:
                     default_speed_image1 = 10M
                     after_finished = "reboot verify_alive"
                - reset_speed:
                     default_speed_image1 = 1M
                     when_streaming = "set_speed"
                     max_speed_image1 = 10M
                     after_finished = "reboot verify_alive"
                     variants:
                         - max_speed:
                             expected_speed_image1 = 10485760
                         - min_speed:
                             wait_timeout = 30000
                             expected_speed_image1 = 10
                - cancel_sync:
                     wait_finished = no
                     cancel_timeout_image1 = 3
                     when_streaming = "cancel"
                - cancel_async:
                     wait_finished = no
                     cancel_timeout_image1 = 3
                     max_speed_image1 = 10M
                     when_streaming = "set_speed cancel"
                - query:
                     cancel_timeout_image1 = 3
                     wait_finished = no
                     default_speed_image1 = 8M
                     when_streaming = "get_status cancel"
        - when_reboot:
            type = block_stream_reboot
            reboot_method = "system_reset"
            before_start = "reboot"
            after_finished = "verify_alive"
        - drop_backingfile:
            type = block_stream_drop_backingfile
            snapshot_chain += " images/sn2"
            # set limited_speed to 10MB/s eq 10485760B/s
            limited_speed = 10485760
            snapshot_check_cmd = "lsof -p %s|awk '{print $9}'|grep ^/"
        - check_backingfile:
            type = block_stream_check_backingfile
            snapshot_chain = "images/sn1"
            expected_image_file = "images/sn1"
            after_finished = "check_backingfile check_imagefile verify_alive"
        - backingfile_option:
            no Host_RHEL.m6, Host_RHEL.m7.u0, Host_RHEL.m7.u1
            type = block_stream_check_backingfile
            snapshot_chain += " images/sn2 images/sn3"
            expected_image_file = "images/sn3"
            before_start = set_backingfile
            after_finished = "check_backingfile_exist check_imagefile"
            variants:
                - absolute_path:
                    absolute_path = yes
                - relative_path:
                    absolute_path = no
        - with_stress:
            type = block_stream_stress
            before_start = "load_stress"
            after_finished = "unload_stress reboot verify_alive"
            variants:
                - @default:
                - cancel_async:
                    wait_finished = no
                    cancel_timeout_image1 = 3
                    max_speed_image1 = 10M
                    when_streaming = "pause_job set_speed resume_job cancel start wait_for_finished"
                    Host_RHEL.m6:
                        when_streaming = "set_speed cancel start wait_for_finished"
        - with_data_integrity:
            type = block_stream_simple
            before_start = "create_files stop"
            after_finished = "resume verify_md5s"
        - with_stop_cont:
           type = block_stream_simple
           when_streaming = "stop resume stop resume stop resume"
           after_finished = "reboot verify_alive"
        - with_installation:
            type = block_stream_installation
            wait_timeout = 36000
            default_speed = 10240000
            need_install = yes
            start_vm = no
            images = "stg"
            image_name_stg = "images/block_stream_installation"
            image_size_stg = 20G
            boot_drive_stg = yes
            source_image = "stg"
            medium = cdrom
            force_create_image_stg = yes
            image_aio = threads
            unattended_delivery_method = cdrom
            cdroms += " unattended"
            index_enable = no
            Linux:
                kernel = vmlinuz
                initrd = initrd.img
        - with_hot_unplug:
            type = block_stream_simple
            before_start = "create_files"
            when_streaming = "hot_unplug"
            wait_finished = no
