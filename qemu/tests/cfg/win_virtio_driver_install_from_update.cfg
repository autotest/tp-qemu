- win_virtio_driver_install_from_update:
    type = win_virtio_driver_install_from_update
    only Windows
    no WinXP WinVista Win7 Win8 Win8.1 Win2003
    no Win2008 Win2008..r2 Win2012 Win2012..r2
    clone_master = yes
    master_images_clone = image1
    remove_image_image1 = yes
    cd_format_fixed = ide
    drive_format_image1 = ide
    q35:
        cd_format_fixed = ahci
        drive_format_image1 = ahci
    devcon_dirname = "win7_"
    Win2008..sp2:
        devcon_dirname = "wlh_"
    WinXP, Win2003:
        devcon_dirname = "wxp_"
    i386:
        devcon_dirname += "x86"
    x86_64:
        devcon_dirname += "amd64"
    devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    del devcon_dirname
    wuauserv_status_cmd = 'sc query wuauserv |findstr "RUNNING" '
    wuauserv_start_cmd = "sc start wuauserv"
    wuauserv_service_cfg_cmd = 'sc config wuauserv start=auto'
    install_driver_cmd = "WIN_UTILS:\AutoIt3\AutoIt3_%PROCESSOR_ARCHITECTURE%.exe WIN_UTILS:\windows_update.au3"
    vio_driver_chk_cmd = 'driverquery /si | find /i "%s"'
    chk_timeout = 240
    variants:
        - with_netkvm:
            driver_name = netkvm
            device_name = "Red Hat VirtIO Ethernet Adapter"
            device_hwid = '"PCI\VEN_1AF4&DEV_1000" "PCI\VEN_1AF4&DEV_1041"'
            nics += " nic2"
            nic_model_nic1 = rtl8139
            nic_model_nic2 = virtio
        - with_viorng:
            driver_name = viorng
            device_name = "VirtIO RNG Device"
            device_hwid = '"PCI\VEN_1AF4&DEV_1005" "PCI\VEN_1AF4&DEV_1044"'
            no_virtio_rng:
                virtio_rngs += " rng0"
                backend_rng0 = rng-builtin
                backend_type = builtin
        - with_viostor:
            driver_name = viostor
            device_name = "Red Hat VirtIO SCSI controller"
            device_hwid = '"PCI\VEN_1AF4&DEV_1001" "PCI\VEN_1AF4&DEV_1042"'
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = virtio
            force_create_image_stg = yes
            remove_image_stg = yes
        - with_vioscsi:
            driver_name = vioscsi
            device_name = "Red Hat VirtIO SCSI pass-through controller"
            device_hwid = '"PCI\VEN_1AF4&DEV_1004" "PCI\VEN_1AF4&DEV_1048"'
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = scsi-hd
            force_create_image_stg = yes
            remove_image_stg = yes
        - with_vioserial:
            driver_name = vioser
            device_name = "VirtIO Serial Driver"
            device_hwid = '"PCI\VEN_1AF4&DEV_1003" "PCI\VEN_1AF4&DEV_1043"'
            serials += " vs"
            serial_type_vs = virtserialport
        - with_balloon:
            driver_name = balloon
            device_name = "VirtIO Balloon Driver"
            device_hwid = '"PCI\VEN_1AF4&DEV_1002" "PCI\VEN_1AF4&DEV_1045"'
            balloon = balloon0
            balloon_dev_devid = balloon0
            balloon_dev_add_bus = yes
        - with_pvpanic:
            no Host_RHEL.m6
            driver_name = pvpanic
            device_name = "QEMU PVPanic Device"
            device_hwid = '"ACPI\QEMU0001"'
        - with_vioinput:
            no Host_RHEL.m6 Host_RHEL.m7.u0 Host_RHEL.m7.u1 Host_RHEL.m7.u2 Host_RHEL.m7.u3
            no Win2008..sp2
            driver_name = vioinput
            device_name = "VirtIO Input Driver"
            device_hwid = '"PCI\VEN_1AF4&DEV_1052"'
            inputs = input1
            input_dev_bus_type_input1 = virtio
            variants:
                - device_mouse:
                    input_dev_type_input1 = mouse
                - device_keyboard:
                    input_dev_type_input1 = keyboard
                - device_tablet:
                    input_dev_type_input1 = tablet
        - with_viofs:
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
            no Win2008 Win7
            Win10.i386:
                mem = 4096
            virt_test_type = qemu
            required_qemu = [4.2.0,)
            filesystems = fs
            fs_driver = virtio-fs
            fs_source_type = mount
            fs_source_dir = virtio_fs_test/
            force_create_fs_source = yes
            remove_fs_source = yes
            fs_target = 'myfs'
            fs_driver_props = {"queue-size": 1024}
            mem_devs = mem1
            backend_mem_mem1 = memory-backend-file
            mem-path_mem1 = /dev/shm
            size_mem1 = ${mem}M
            use_mem_mem1 = no
            share_mem = yes
            guest_numa_nodes = shm0
            numa_memdev_shm0 = mem-mem1
            numa_nodeid_shm0 = 0
            driver_name = viofs
            device_name = "VirtIO FS Device"
            device_hwid = '"PCI\VEN_1AF4&DEV_105A"'
            fs_binary_extra_options = " -o cache=auto"
        - with_fwcfg:
            vmcoreinfo = yes
            driver_name = fwcfg
            device_name = QEMU FwCfg Device
            device_hwid = '"ACPI\VEN_QEMU&DEV_0002"'
        - with_viomem:
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8
            maxmem_mem = 20G
            mem_fixed = 4096
            mem_devs = 'vmem0'
            vm_memdev_model_vmem0 = "virtio-mem"
            size_mem_vmem0 = 8G
            memdev_memory_vmem0 = "mem-vmem0"
            driver_name = "viomem"
            device_name = "VirtIO Viomem Driver"
            device_hwid = '"PCI\VEN_1AF4&DEV_1002" "PCI\VEN_1AF4&DEV_1058"'
