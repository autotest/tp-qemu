# Notes:
# For windows guest, you can download md5sum.exe from http://www.brothersoft.com/md5sum-81781.html,
# then add parents dir to $PATH or config md5sum in share/cfg/guest-os/Windows.cfg;
- qemu_disk_img:
    no qed raw vmdk
    virt_test_type = qemu
    type = qemu_disk_img
    image_chain= "image1"
    kill_vm = yes
    start_vm = no
    image_size = 20G
    # md5sum binary path
    md5sum_bin = "md5sum"
    Windows:
        x86_64:
            sync_bin = WIN_UTILS:\Sync\sync64.exe /accepteula
        i386, i686:
            sync_bin = WIN_UTILS:\Sync\sync.exe /accepteula
    force_create_image = no
    backup_image_before_testing = yes
    restore_image_after_testing = yes
    tmp_dir = /var/tmp
    tmp_file_name = ${tmp_dir}/test.img
    file_create_cmd = "dd if=/dev/urandom of=%s bs=4k count=250"
    variants:
        - @default:
        - cluster_size:
            only convert.base_to_qcow2.default, convert.base_to_qcow2.compat.default
            option_verified += " csize"
            variants:
                - cluster_size_512:
                    cluster_size = 512
                - cluster_size_2K:
                    cluster_size = 2K
                - cluster_size_2M:
                    cluster_size = 2M
        - cache_mode:
            only convert.base_to_qcow2.default, commit, rebase.snB.to_base
            variants:
                - none:
                    cache_mode = none
                - writeback:
                    cache_mode = writeback
                - unsafe:
                    Host_RHEL.m6:
                        no commit
                    cache_mode = unsafe
                - directsync:
                    cache_mode = directsync
                - writethrough:
                    cache_mode = writethrough
    variants:
        - convert:
            type = qemu_disk_img_convert
            guest_file_name = ${tmp_dir}/test.img
            variants:
                - base_to_qcow2:
                    image_convert = "image1"
                    convert_name_image1 = "images/image1_to_qcow2"
                    convert_format_image1 = "qcow2"
                    option_verified = "format"
                    variants:
                        - @default:
                        - compressed:
                            convert_compressed = yes
                        - preallocation_mode:
                            variants:
                                - off:
                                    preallocated = off
                                - metadata:
                                    preallocated = metadata
                                - falloc:
                                    no Host_RHEL.m5 Host_RHEL.m6.u6
                                    no Host_RHEL.m6.u0 Host_RHEL.m6.u1
                                    no Host_RHEL.m6.u2 Host_RHEL.m6.u3
                                    no Host_RHEL.m6.u4 Host_RHEL.m6.u5
                                    no Host_RHEL.m7.u0 Host_RHEL.m7.u1
                                    preallocated = falloc
                                - full:
                                    no Host_RHEL.m5
                                    no Host_RHEL.m6.u0 Host_RHEL.m6.u1
                                    no Host_RHEL.m6.u2 Host_RHEL.m6.u3
                                    no Host_RHEL.m6.u4 Host_RHEL.m6.u5
                                    no Host_RHEL.m7.u0 Host_RHEL.m7.u1
                                    preallocated = full
                        - compat:
                            no Host_RHEL.m5, Host_RHEL.m6
                            option_verified += " compat"
                            variants:
                                - compat_0.10:
                                    compat = 0.10
                                - compat_1.1:
                                    compat = 1.1
                            variants:
                                - @default:
                                - lazy_refcounts_on:
                                    only compat_1.1
                                    lazy_refcounts = on
                                    option_verified += " lcounts"
                                - lazy_refcounts_off:
                                    option_verified += " lcounts"
                                    lazy_refcounts = off
                        - fully_allocated:
                            no Host_RHEL.m5, Host_RHEL.m6
                            option_verified += " sparse_size"
                            sparse_size = 0
                - base_to_raw:
                    option_verified = "format"
                    image_convert = "image1"
                    convert_name_image1 = "images/image1_to_raw"
                    convert_format_image1 = "raw"
                - snapshot_to_qcow2:
                    option_verified = "format"
                    image_convert = "sn1"
                    image_chain += " sn1"
                    image_name_sn1 = "images/sn1"
                    image_format_sn1 = "qcow2"
                    convert_name_sn1 = "images/sn1_to_qcow2"
                    convert_format_sn1 = "qcow2"
        - commit:
            type = qemu_disk_img_commit
            guest_file_name = ${tmp_dir}/test.img
            image_commit = "sn1"
            image_chain += " sn1"
            image_name_sn1 = "images/sn1"
            image_format_sn1 = "qcow2"
            backup_image_before_testing = yes
            restore_image_after_testing = yes
        - info:
            type = qemu_disk_img_info
            guest_file_name_image1 = "${tmp_dir}/test.img"
            image_chain += " snA"
            image_name_snA = "images/snA"
            image_format_snA = "qcow2"
            guest_file_name_snA = "${tmp_dir}/snA"
            variants:
                - @default:
                - backing_chain:
                    backing_chain = yes
                - change_block_interface:
                    drive_format_snA = ide
                    q35:
                        drive_format_snA = ahci
        - snapshot:
            type = qemu_disk_img_snapshot
            guest_file_name = "${tmp_dir}/test.img"
            image_chain += " sn1"
            image_name_sn1 = "images/sn1"
        - rebase:
            type = qemu_disk_img_rebase
            rebase_mode = safe
            base_format = qcow2
            guest_file_name_image1 = "${tmp_dir}/test.img"
            image_chain += " snA snB"
            image_name_snA = "images/snA"
            image_name_snB = "images/snB"
            guest_file_name_snA = "${tmp_dir}/snA"
            guest_file_name_snB = "${tmp_dir}/snB"
            variants:
                - snB:
                    check_files = "${tmp_dir}/test.img ${tmp_dir}/snA ${tmp_dir}/snB"
                    variants:
                        - to_base:
                            rebase_list = "snB > image1"
                        - to_null:
                            rebase_list = "snB > null"
                - snC:
                    image_chain += " snC"
                    image_name_snC = "images/snC"
                    guest_file_name_snC = "${tmp_dir}/snC"
                    check_files = "${tmp_dir}/test.img ${tmp_dir}/snA ${tmp_dir}/snB ${tmp_dir}/snC"
                    variants:
                        - to_base:
                            rebase_list = "snC > image1"
                        - to_new:
                            rebase_list = "snC > new"
                            images = "image1 new"
                            boot_drive_new = no
                            force_create_image_new = "yes"
                            remove_image_new = "yes"
                            image_name_new = "images/new"
                            image_format_new = "qcow2"
                            variants:
                                - @default:
                                - restore_to_snB:
                                    rebase_list += ";snC > snB"
                - snD:
                    image_chain += " snC snD"
                    image_name_snC = "images/snC"
                    image_name_snD = "images/snD"
                    guest_file_name_snC = "${tmp_dir}/snC"
                    guest_file_name_snD = "${tmp_dir}/snD"
                    check_files = "${tmp_dir}/test.img ${tmp_dir}/snA ${tmp_dir}/snB ${tmp_dir}/snC ${tmp_dir}/snD"
                    variants:
                        - to_snB_snA_base:
                            rebase_list = "snD > snB; snD > snA; snD > image1"
