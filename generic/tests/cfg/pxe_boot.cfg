- pxe_boot:
    virt_test_type = qemu libvirt
    type = pxe_boot
    qemu_stop = off
    requires_root = yes
    images = pxe
    image_boot_pxe = no
    image_name_pxe = images/pxe-test
    image_size_pxe = 1G
    force_create_image_pxe = yes
    remove_image_pxe = yes
    kill_vm_on_error = yes
    network = bridge
    restart_vm = yes
    pxe_timeout = 360
    image_verify_bootable = no
    kill_vm = yes
    kill_vm_gracefully = no
    del boot_order
    del boot_once
    del boot_reboot_timeout
    del boot_splash_time
    nics = nic1
    bootindex_nic1 = 0
    s390x:
        extra_params += " -no-shutdown"
    # pxe_boot does not work for macvtap backend, as pxe can't
    # capture the packet from the macvtap tap port, disable it
    # for macvtap temporarily, will fix it in the furture.
    no macvtap
    no igb
    cdroms = ""
    variants:
        - @default:
        - gpxe:
            only Host_RHEL.m6
            pre_command = "alternatives --display qemu-pxe-roms |grep -q gpxe || alternatives --install /usr/share/qemu-pxe-roms qemu-pxe-roms /usr/share/gpxe 1; alternatives --set 'qemu-pxe-roms' /usr/share/gpxe"
        - ipxe:
            only Host_RHEL.m7
            pre_command = "alternatives --display qemu-pxe-roms |grep -q ipxe || alternatives --install /usr/share/qemu-pxe-roms qemu-pxe-roms /usr/share/ipxe 1; alternatives --set 'qemu-pxe-roms' /usr/share/ipxe"
        - with_query_cpus:
            type = pxe_query_cpus
            start_vm = no
            restart_vm = no
            enable_mmu_cmd_ept = "modprobe -r kvm_intel; modprobe kvm_intel ept=1"
            check_mmu_cmd_ept = "grep -i Y /sys/module/kvm_intel/parameters/ept"
            restore_mmu_cmd_ept = "modprobe -r kvm_intel && modprobe kvm_intel"
            enable_mmu_cmd_npt = "modprobe -r kvm_amd; modprobe kvm_amd npt=1"
            check_mmu_cmd_npt = "grep -i 1 /sys/module/kvm_amd/parameters/npt"
            restore_mmu_cmd_npt = "modprobe -r kvm_amd && modprobe kvm_amd"
