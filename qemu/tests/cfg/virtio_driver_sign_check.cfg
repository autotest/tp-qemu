- virtio_driver_sign_check:
    virt_test_type = qemu
    only Windows
    type = virtio_driver_sign_check
    signtool_path_key = "HLK"
    Win2008..sp2:
        # windows 2008 not support virtio input device
        no with_vioinput
        signtool_path_key = "WLK"
    Win2008..r2, Win7, Win8, Win2012:
        signtool_path_key = "HCK"
    signtool_cmd = "WIN_UTILS:\signtool\Signtool_%%PROCESSOR_ARCHITECTURE%%_${signtool_path_key}.exe" verify /v %s /c %s %s
    verify_option = "/pa"
    variants:
        - virtio_win_iso_media:
            virtio_win_media_type = iso
            cdroms += " virtio"
        - virtio_win_vfd_media:
            only with_vioscsi, with_viostor, with_netkvm
            virtio_win_media_type = vfd
            floppies = "virtio"
            i386:
                floppy_name_virtio = isos/windows/virtio-win_x86.vfd
            x86_64:
                floppy_name_virtio = isos/windows/virtio-win_amd64.vfd
            floppy_readonly_virtio = yes
    variants:
        - with_balloon:
            tested_driver = "Balloon"
        - with_pvpanic:
            tested_driver = "pvpanic"
        - with_viorng:
            tested_driver = "viorng"
        - with_vioser:
            tested_driver = "vioserial"
        - with_vioinput:
            tested_driver = "vioinput"
        - with_netkvm:
            tested_driver = "NetKVM"
        - with_vioscsi:
            tested_driver = "vioscsi"
        - with_viostor:
            tested_driver = "viostor"
        - with_viofs:
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
            no Win2008 Win7
            Win10.i386:
                mem = 4096
            virt_test_type = qemu
            required_qemu = [4.2.0,)
            filesystems = fs
            fs_driver = virtio-fs
            fs_source_type = mount
            fs_source_dir = virtio_fs_test/
            force_create_fs_source = yes
            remove_fs_source = yes
            fs_target = 'myfs'
            fs_driver_props = {"queue-size": 1024}
            mem_devs = mem1
            backend_mem_mem1 = memory-backend-file
            mem-path_mem1 = /dev/shm
            size_mem1 = ${mem}M
            use_mem_mem1 = no
            share_mem = yes
            guest_numa_nodes = shm0
            numa_memdev_shm0 = mem-mem1
            numa_nodeid_shm0 = 0
            tested_driver = viofs
        - with_fwcfg:
            tested_driver = fwcfg
        - with_viomem:
            no i386
            required_virtio_win_prewhql = [0.1.251, )
            required_virtio_win = [1.9.40.0, )
            tested_driver = viomem
