- in_place_upgrade:
    only RHEL
    pre_release = "release 8"
    post_release = "release 9"
    type = in_place_upgrade
    login_timeout = 300
    release_check = "cat /etc/redhat-release"
    new_kernel_ver = "5.14"
    fix_firewalld = "sed -i 's/AllowZoneDrifting=yes/AllowZoneDrifting=no/g' "
    fix_firewalld += "/etc/firewalld/firewalld.conf"
    fix_permit = "sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' "
    fix_permit += "/etc/ssh/sshd_config"
    restore_permit = "sudo sed -i 's/PermitRootLogin no/PermitRootLogin yes/g'"
    restore_permit += " /etc/ssh/sshd_config"
    check_file = "sudo ls /var/log/leapp/answerfile"
    restart_sshd = "sudo systemctl restart sshd.service"
    add_ipuser = "useradd ipuser"
    add_wheel_ipuser = "usermod -aG wheel ipuser"
    add_passwd_ipuser = "echo ipuser |passwd --stdin ipuser"
    no_passwd_for_sudo = "echo -e 'ipuser\tALL=(ALL)\tNOPASSWD: ALL' > "
    no_passwd_for_sudo += "/etc/sudoers.d/leapp_ipuser_sudo"
    check_kernel = "uname -r"
    ipu_after_timeout = 6000
    user_assistant = "ipuser"
    user_assistant_pw = "ipuser"
    reboot_cmd = "reboot"
    yum_update = "yum -y update"
    clean_up_old_kernel = "dnf -y remove --oldinstallonly"
    depends_pkgs = "yum-utils"
    error_info = "Error: No old installonly packages found for removal"
    stop_yum_update = "rm -rf /var/run/yum.pid"
    check_repo_list = "yum repolist enabled"
    check_rhel_ver = "cut -f1-2 -d. /etc/redhat-release | sed 's/[^0-9]//g'"
    RHEL.8:
        rmmod_module = "rmmod ip_set;rmmod nft_compat"
    s390,s390x:
        # no need to check in host, and we don't support RHEL.7.9 as the
        # host on s390x
        RHEL.8:
            rmmod_module = "rmmod ip_set"
        device_cio_free_check_cmd = "systemctl status device_cio_free"
    # com_install = "yes" installing leapp from compose
    # com_install = "no" installing leapp from upstream
    # <repo_leapp> it's leapp tool's repo
    # <ins_leapp_cmd> install leapp tool command
    # <prepare_env>, <get_answer_files_source> and <get_answer_files>
    # private script to prepare in place upgrade env
    # <old_custom_internal_repo>
    # this parameter should contain the repo files, by which you can upgrade
    # old system to the newer version before you really do in place upgade
    # <new_rhel_content>
    # this parameter should contain your upgraded system's repo files
    # <pre_upgrade_no_rhsm>, <process_upgrade_no_rhsm>
    # <pre_upgrade_rhsm>, <process_upgrade_rhsm>
    # these paramters are for leapp preupgrade and upgrade
    variants:
        - compose_install:
            com_install = "yes"
            com_ins_leapp = "yum install leapp-upgrade -y"
        - stream_install:
            # Please modify the build in the internal cfg
            # An example
            # com_ins_leapp = "yum install leapp-upgrade"
        - upstream_install:
            com_install = "no"
    variants:
        - without_rhsm:
            rhsm_type = "no_rhsm"
        - with_rhsm:
            rhsm_type = "rhsm"
        - without_rhsm_rhel8_to_rhel9:
            rhsm_type = "no_rhsm"
            pre_upgrade_no_rhsm = "leapp preupgrade --debug --no-rhsm"
            process_upgrade_no_rhsm = "LEAPP_UNSUPPORTED=1 "
            process_upgrade_no_rhsm += "LEAPP_DEVEL_SKIP_CHECK_OS_RELEASE=1 "
            process_upgrade_no_rhsm += "leapp upgrade --debug --no-rhsm"
            disable_content = 'yum-config-manager --disable "*"'
            enable_content = "yum-config-manager"
            enable_content += " --enable "
            enable_content += "rhel-8-for-{}-appstream-rpms"
            enable_content += " --enable "
            enable_content += "rhel-8-for-{}-baseos-rpms"
        - with_rhsm_rhel8_to_rhel9:
            # Two available upgrade paths: RHEL 8.6 GA to RHEL 9.0 GA,
            # RHEL 8.7(not GA) to RHEL 9.0 GA (RHEL 9.1 is optional),
            # which is not ready on CDN
            rhsm_type = "rhsm"
            pre_upgrade_rhsm = "leapp preupgrade --debug"
            process_upgrade_rhsm = "leapp upgrade --debug"
            enable_content = 'subscription-manager repos --disable "*"'
            enable_content += " --enable "
            enable_content += "rhel-8-for-{}-appstream-rpms"
            enable_content += " --enable "
            enable_content += "rhel-8-for-{}-baseos-rpms"
            x86_64:
                get_pool_id = "rhsm_get_poolid RH00003"
            ppc64, ppc64le:
                get_pool_id = "rhsm_get_poolid RH00322"
            s390x:
                # or you can choose RH0451709 RH02210 #GA SKU,
                # please choose the proper SKU
                get_pool_id = "rhsm_get_poolid RH0451709"
            attach_pool = "subscription-manager attach --pool "
            # now we have 8.6 GA content on the server,
            # for 8.7,
            # please update it accordingly in the future
            # since it's not ready on CDN server
            # set_release = "subscription-manager release --set 8.7"
            attach_pool = "subscription-manager attach --pool "
            set_release = "subscription-manager release --set "
