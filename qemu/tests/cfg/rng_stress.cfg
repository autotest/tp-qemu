- rng_stress:
    type = rng_stress
    kill_vm = yes
    virt_test_type = qemu
    read_rng_timeout = 360
    sub_test = rng_bat
    no no_virtio_rng
    Windows:
        session_cmd_timeout = 240
        read_rng_cmd  = "WIN_UTILS:\random_%PROCESSOR_ARCHITECTURE%.exe"
        driver_name = "viorng"
        rng_data_rex = "0x\w"
        driver_id_pattern = "(.*?):.*?VirtIO RNG Device"
        i386:
            driver_id_cmd = 'WIN_UTILS:\devcon\wxp_x86\devcon.exe find * | find "VirtIO"'
            driver_check_cmd = "WIN_UTILS:\devcon\wxp_x86\devcon.exe status @DRIVER_ID"
        x86_64:
            driver_id_cmd = 'WIN_UTILS:\devcon\wnet_amd64\devcon.exe find * | find "VirtIO"'
            driver_check_cmd = "WIN_UTILS:\devcon\wnet_amd64\devcon.exe status @DRIVER_ID"
    Linux:
        session_cmd_timeout = 360
        read_rng_cmd  = "dd if=/dev/random bs=1 count=10 2>/dev/null|hexdump"
        driver_verifier_cmd = "cat /sys/devices/virtual/misc/hw_random/rng_current"
        driver_available_cmd = "cat /sys/devices/virtual/misc/hw_random/rng_available"
        driver_name = virtio
        rng_data_rex = "\w+"
    variants:
        - two_device:
            virtio_rngs += " rng1"
            switch_rng_cmd = "echo -n %s > /sys/class/misc/hw_random/rng_current"
            pre_cmd = "dd if=/dev/random of=/dev/null bs=10 count=10"
            post_cmd = "dd if=/dev/random of=/dev/null bs=10 count=10"
            rng_random:
                 backend_rng1 = rng-random
            rng_egd:
                 backend_rng1 = rng-egd
        - one_device:
            pre_cmd = "dd if=/dev/random of=/dev/null &"
            post_cmd = "pkill dd"
            ignore_status = yes
