- virtio_fs_security_label:
    no RHEL.6 RHEL.7 RHEL.8 RHEL.9.0
    no Windows
    no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
    clone_master = yes
    master_images_clone = image1
    remove_image_image1 = yes
    type = virtio_fs_share_data
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    kill_vm = yes
    start_vm = no
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_type = mount
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    fs_driver_props = {"queue-size": 1024}
    mem = 4096
    mem_devs = mem1
    backend_mem_mem1 = memory-backend-file
    mem-path_mem1 = /dev/shm
    size_mem1 = 4G
    use_mem_mem1 = no
    share_mem = yes
    test_file = 'test_file'
    fs_dest = '/mnt/${fs_target}'
    driver_name = viofs
    fs_binary_extra_options = ''
    cmd_dd = 'dd if=/dev/urandom of=%s bs=1M count=2048 oflag=direct'
    cmd_md5 = 'md5sum %s'
    io_timeout = 120
    security_label_test = yes
    get_selinux_state_cmd = getenforce
    security_mode = enforcing
    fs_binary_extra_options = ' --xattr --security-label --xattrmap=:map:security.selinux:trusted.virtiofsd.:'
    fs_binary_extra_options += ' --modcaps=+sys_admin --sandbox=chroot'
    getfattr_cmd = getfattr --name %s %s
    selinux_xattr_name = security.selinux
    trust_selinux_attr_name = trusted.virtiofsd.security.selinux
    context_pattern = '\"[a-z,_]*_u:[a-z,_]*_r:([a-z,_]*_t)(?:\:[s,\-,0-9,:[c,\,,0-9]*]*)?\"'
    getfattr_list_cmd = "getfattr -m '' %s"
    s390, s390x:
        required_qemu = [5.2.0,)
        vm_mem_share = yes
        pre_command_noncritical = yes
        pre_command = "echo 3 > /proc/sys/vm/drop_caches"
        setup_hugepages = yes
        kvm_module_parameters = 'hpage=1'
        expected_hugepage_size = 1024
        cmd_dd = 'dd if=/dev/urandom of=%s bs=1M count=200 oflag=direct'
    !s390, s390x:
        guest_numa_nodes = shm0
        numa_memdev_shm0 = mem-mem1
        numa_nodeid_shm0 = 0
    variants:
        - @default:
        - selinux_testsuits:
            only x86_64
            image_snapshot = yes
            cmd_download_selinux_suits = 'cd /home && rm -rf selinux-testsuite && git clone https://github.com/rhvgoyal/selinux-testsuite.git'
            cmd_yum_install_se = 'yum install -y perl-Test perl-Test-Harness perl-Test-Simple perl-lib selinux-policy-devel gcc'
            cmd_yum_install_se += ' libselinux-devel net-tools netlabel_tools iptables lksctp-tools-devel attr libbpf-devel'
            cmd_yum_install_se += ' keyutils-libs-devel quota xfsprogs-devel libuuid-devel e2fsprogs dosfstools'
            cmd_yum_install_se += ' nftables kernel-devel-$(uname -r) kernel-modules-$(uname -r)'
            jfsutils_pkg = jfsutils-1.1.15-18.el9.1.x86_64.rpm
            cmd_install_jfsutils = 'rpm -ivh /tmp/${jfsutils_pkg}'
            cmd_make_sesuit = 'cd /home/selinux-testsuite/ && git checkout virtiofs-support && make test'
            timeout_make_sesuit = 1200
            make_blacklist = "Failed tests:  5, 7, 9, 11"
            cmd_run_sesuit = 'cd /home/selinux-testsuite/tests/filesystem/ ; ./test -f virtiofs -t myfs -v'
