- viorng_in_use:
    type = driver_in_use
    start_vm = yes
    kill_vm_on_error = yes
    check_guest_bsod = yes
    login_timeout = 360
    suppress_exception = no
    run_bgstress = rng_bat
    session_cmd_timeout = 360
    no no_virtio_rng
    Windows:
        cdrom_cd1 = isos/windows/winutils.iso
        driver_id_pattern = "(.*?):.*?VirtIO RNG Device"
        target_process = random\w*.exe
        rng_data_rex = "0x\w"
        driver_name = "viorng"
        rng_dst = "c:\random_%PROCESSOR_ARCHITECTURE%.exe"
        read_rng_cmd = ${rng_dst}
        list_cmd = "wmic process get name"
        cdroms += " virtio"
        i386:
            driver_id_cmd = 'WIN_UTILS:\devcon\wxp_x86\devcon.exe find * | find "VirtIO"'
            driver_check_cmd = "WIN_UTILS:\devcon\wxp_x86\devcon.exe status @DRIVER_ID"
            devcon_dirname = "x86"
        x86_64:
            driver_id_cmd = 'WIN_UTILS:\devcon\wnet_amd64\devcon.exe find * | find "VirtIO"'
            driver_check_cmd = "WIN_UTILS:\devcon\wnet_amd64\devcon.exe status @DRIVER_ID"
            devcon_dirname = "amd64"
        devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
        memory_leak_check = yes
    Linux:
        read_rng_cmd  = "dd if=/dev/random bs=10 count=10 2>/dev/null|hexdump"
        driver_verifier_cmd = "cat /sys/devices/virtual/misc/hw_random/rng_current"
        target_process = dd
        rng_data_rex = "\w+"
        list_cmd = "ps aux | grep rngd | grep 'Rs\|Ds'"
        driver_name = virtio_rng
        RHEL.7, RHEL.8.0, RHEL.8.1, RHEL8.2, RHEL.8.3:
            check_rngd_service = "systemctl status rngd"
            start_rngd_service = "systemctl start rngd"
        RHEL.6:
            driver_name = virtio
            check_rngd_service = "service rngd status"
            start_rngd_service = "service rngd start"
        s390x:
            !RHEL.7,RHEL.8:
                update_driver = "echo 'virtio_rng.0' > /sys/devices/virtual/misc/hw_random/rng_current"
    variants:
        - before_bg_test:
            run_bg_flag = "before_bg_test"
            no rng_egd
        - during_bg_test:
            suppress_exception = yes
            run_bg_flag = "during_bg_test"
            Windows:
                read_rng_cmd = for /l %i in (1, 1, 1000) do ${rng_dst}"
            Linux:
                read_rng_cmd  = "dd if=/dev/random bs=10 count=1000000 2>/dev/null|hexdump"
            no rng_egd
        - after_bg_test:
            run_bg_flag = "after_bg_test"
    variants:
        - with_stop_continue:
            suppress_exception = no
            sub_test = stop_continue
        - with_shutdown:
            sub_test = shutdown
            shutdown_method = shell
            memory_leak_check = no
        - with_reboot:
            sub_test = boot
            reboot_count = 1
            reboot_method = shell
        - with_system_reset:
            sub_test = boot
            reboot_method = system_reset
            sleep_before_reset = 20
        - with_live_migration:
            sub_test = migration
            suppress_exception = no
