- openflow_acl_test:
    virt_test_type = qemu
    type = openflow_acl_test
    image_snapshot = yes
    acl_protocol = "tcp"
    Linux:
        disable_iptables = "yes"
    ref_cmd_linux = ping -c 4 ACCESS_TARGET
    ref_cmd_windows = ping ACCESS_TARGET
    variants:
        - website:
            service_linux = httpd
            service_windows = IIS-WebServer
            target_port = 80
            prepare_cmd_linux = echo "autotest page" > /var/www/html/autotest-test.html
            cleanup_cmd_linux = rm -rf /var/www/html/autotest-test.html
            access_cmd_linux = curl -L http://ACCESS_TARGET/autotest-test.html --connect-timeout 10
            curl_win_path = C:\curl\
            access_cmd_windows = cd C:\curl && curl.exe -k -L http://ACCESS_TARGET/autotest-test.html --connect-timeout 10
            setup_cmd_windows = start /w pkgmgr /iu:IIS-WebServerRole;IIS-WebServer
            prepare_cmd_windows = echo "autotest page" > C:\inetpub\wwwroot\autotest-test.html
            cleanup_cmd_windows =
            stop_cmd_windows =
            Windows:
                copy_curl = curl.exe
        - ftp:
            target_port = 21
            service_linux = vsftpd
            service_windows = ftp
            prepare_cmd_linux = dd if=/dev/zero of=/var/ftp/pub/autotest-test bs=1M count=2
            cleanup_cmd_linux = rm -rf /var/ftp/pub/autotest-test
            access_cmd_linux =  rm -rf autotest-test; lftpget ftp://ACCESS_TARGET/pub/autotest-test &> /dev/ttyS0
            clean_guest_linux = rm -rf autotest-test
            setup_cmd_windows = start /w pkgmgr /iu:IIS-ManagmentConsole;IIS-ManagementScriptingTools;IIS-FTPServer;IIS-FTPExtensibility && C:\dd.py C:\InetPub\FTPRoot\autotest-test 2
            stop_cmd_windows =
            prepare_cmd_windows =
            cleanup_cmd_windows =
            access_cmd_windows = echo get autotest-test > C:\ftp.txt && echo quit >> C:\ftp.txt && ftp -n -s:C:\ftp.txt ACCESS_TARGET
            check_from_output_windows = Not connected
            op_timeout = 30
            Windows:
                copy_scripts = dd.py
        - ssh:
            only Linux
            access_cmd = ssh
            target_port = 22
            host_username = root
            del setup_cmd
            del stop_cmd
        - telnet:
            service_linux = xinetd
            service_windows = telnet
            prepare_cmd_linux = sed -i 's/^auth       required/#auth       required/g' /etc/pam.d/remote
            prepare_cmd_linux += ; echo "service telnet" > /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "{" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        flags           = REUSE" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        socket_type     = stream " >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        wait            = no" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        user            = root" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        server          = /usr/sbin/in.telnetd" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        log_on_failure  += USERID" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "        disable         = no" >> /etc/xinetd.d/telnet
            prepare_cmd_linux += ; echo "}" >> /etc/xinetd.d/telnet
            setup_cmd_windows = start /w pkgmgr /iu:TelnetClient;TelnetServer
            access_cmd = telnet
            target_port = 23
            host_username = root
            Windows:
                 quit_cmd = quit
                 copy_scripts = telnet.py wait_for_quit.py
            del stop_cmd_windows
            setup_targets = virt-tests-vm1 virt-tests-vm2 localhost
    variants:
        - access_deny_all_target:
            acl_disabled = yes
            acl_extra_options = "tp_dst=TARGET_PORT"
            ftp:
                setup_targets = localhost
            website:
                access_cmd_linux = curl -L www.redhat.com --connect-timeout 10
                access_cmd_windows = cd C:\curl\ && curl.exe -k -L www.redhat.com --connect-timeout 10
            ssh, telnet:
                only Linux
                vms = "virt-tests-vm1 virt-tests-vm2"
                access_targets = virt-tests-vm2 localhost
                extra_target = localhost
        - access_deny_special_target:
            acl_disabled_localhost = yes
            netdst = private
            priv_br_type = openvswitch
            setup_service = yes
            acl_extra_options = "tp_dst=TARGET_PORT nw_dst=NW_DST"
            access_targets = localhost virt-tests-vm2
            vms = "virt-tests-vm1 virt-tests-vm2"
            extra_target = localhost
            ftp, website:
                setup_targets = localhost virt-tests-vm2
            telnet:
                only Linux
        - accessed_deny_all_target:
            acl_disabled = yes
            access_targets = virt-tests-vm1
            netdst = private
            priv_br_type = openvswitch
            setup_service = yes
            acl_extra_options = "tp_src=TARGET_PORT"
            vms = "virt-tests-vm1 virt-tests-vm2"
            extra_target = localhost
            ftp, website:
                setup_targets = virt-tests-vm1
        - accessed_deny_special_target:
            access_targets = virt-tests-vm1
            deny_target = virt-tests-vm2
            netdst = private
            priv_br_type = openvswitch
            setup_service = yes
            acl_extra_options = "tp_src=TARGET_PORT nw_dst=NW_DST"
            vms = "virt-tests-vm1 virt-tests-vm2"
            extra_target = localhost
            acl_disabled_virt-tests-vm2 = yes
            ftp, website:
                setup_targets = virt-tests-vm1
