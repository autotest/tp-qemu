- virtio_fs_queue_size:
    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1
    no Win2008 Win7
    no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
    type = virtio_fs_share_data
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    s390, s390x:
        required_qemu = [5.2.0,)
    kill_vm = yes
    start_vm = yes
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_type = mount
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    share_mem = yes
    test_file = 'test_file'
    fs_dest = '/mnt/${fs_target}'
    vm_mem_share = yes
    vm_mem_backend = memory-backend-file
    vm_mem_backend_path = /dev/shm
    driver_name = viofs
    io_timeout = 2000
    fio_options = '--name=stress --filename=%s --ioengine=libaio --rw=write --direct=1 '
    fio_options += '--size=1G --iodepth=256 --numjobs=128 --runtime=1800 '
    Windows:
        # install winfsp tool
        i386, i686:
            install_winfsp_path = 'C:\Program Files'
            devcon_dirname = 'x86'
        x86_64:
            install_winfsp_path = 'C:\Program Files (x86)'
            devcon_dirname = 'amd64'
        install_winfsp_cmd = 'msiexec /i WIN_UTILS:\winfsp.msi /qn'
        check_installed_cmd = 'dir "%s" |findstr /I winfsp'
        viofs_log_file = C:\viofs_log.txt
        viofs_svc_name = VirtioFsSvc
        viofs_exe_path = C:\virtiofs.exe
        viofs_exe_copy_cmd = xcopy %s C:\ /Y
        viofs_sc_create_cmd = 'sc create ${viofs_svc_name} binpath=${viofs_exe_path} start=auto'
        viofs_sc_create_cmd += ' depend="WinFsp.Launcher/VirtioFsDrv" DisplayName="Virtio FS Service"'
        viofs_sc_start_cmd = 'sc start ${viofs_svc_name}'
        viofs_sc_query_cmd = 'sc query ${viofs_svc_name}'
        viofs_sc_delete_cmd = 'sc delete ${viofs_svc_name}'
        virtio_win_media_type = iso
        cdroms += " virtio"
        devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
        fio_options = '--name=stress --filename=%s --ioengine=windowsaio --rw=write --direct=1 '
        fio_options += '--size=1G --iodepth=256 --numjobs=128 --runtime=1800 --thread '
    variants:
        - size_16:
            fs_driver_props = {"queue-size": 16}
            fio_options += '--bs=4k'
        - size_512:
            fs_driver_props = {"queue-size": 512}
            fio_options += '--bs=16k'
        - size_1024:
            fs_driver_props = {"queue-size": 1024}
            fio_options += '--bs=64k'
