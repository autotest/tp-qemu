- qemu_img:
    type = qemu_img
    vms = ''
    profilers = ''
    take_regular_screendumps = no
    variants:
        - check:
            no gluster
            subcommand = check
            image_name_dd = dd_created_image
            force_create_image_dd = no
            remove_image_dd = yes
            create_image_cmd = "dd if=/dev/zero of=%s bs=1G count=1"
            # Test the conversion from 'dd_image_name' to specified format
            supported_image_formats = qcow2 raw qed
            Host_RHEL.m5:
                supported_image_formats = qcow2 raw
        - create:
            subcommand = create
            images += " large"
            force_create_image_large = yes
            image_size_large = 2G
            image_name_large = create_large_image
            remove_image_large = yes
            variants:
                - @cluster_size_default:
                - cluster_size:
                    no Host_RHEL.m5
                    variants:
                        - cluster_512:
                            image_cluster_size = 512
                        - cluster_1024:
                            image_cluster_size = 1024
                        - cluster_4096:
                            image_cluster_size = 4096
                        - cluster_1M:
                            image_cluster_size = 1M
                        - cluster_2M:
                            image_cluster_size = 2M
            variants:
                - non-preallocated:
                    no raw
                    preallocated = off
                - preallocated:
                    no Host_RHEL.m5
                    no raw
                    preallocated = metadata
        - convert:
            subcommand = convert
            compressed = no
            encrypted = no
            variants:
                - to_qcow2:
                    dest_image_format = qcow2
                    variants:
                        - @cluster_size_default:
                        - cluster_size_2048:
                            # This case come from qemu-kvm bug that " qcow2 converting
                            # error when -o cluster_size <= 2048"
                            # qemu_img_options set qemu-img -o options. It support multi options.
                            # If you want support multi options here, e.g.  A, B. JUst set qemu_img_options = A B
                            # Then set A = xx, B = xx in configure
                            qemu_img_options = cluster_size
                            #cluster_size set cluster size used in qemu-img -o cluster_size=, default is 64k.
                            cluster_size = 2048
                            no Host_RHEL.m5
                        - show_progress:
                            command_result_pattern = "\(\d+\.\d+/100%\)"
                            variants:
                                - show_progress_on:
                                    show_progress = on
                                    check_output = stdout
                                - show_progress_off:
                                    show_progress = off
                                    qemu_img_options = cluster_size
                                    cluster_size = 512
                                    check_output = stderr
                - to_raw:
                    dest_image_format = raw
                - to_qed:
                    no Host_RHEL
                    no (image_backend=gluster)
                    dest_image_format = qed

        - snapshot:
            subcommand = snapshot
            only qcow2
        - info:
            subcommand = info
        - rebase:
            no raw vmdk qed
            subcommand = rebase
            image_name_snapshot1 = "images/sn1"
            image_name_snapshot2 = "images/sn2"
            variants:
                - unsafe:
                    rebase_mode = unsafe
                - show_progress:
                    command_result_pattern = "\(\d+\.\d+/100%\)"
                    variants:
                        - show_progress_on:
                            show_progress = on
                            check_output = stdout
                        - show_progress_off:
                            show_progress = off
                            check_output = stderr
        # Commit is the only subtest that does need an installed guest
        - commit:  install setup image_copy unattended_install.cdrom
            no vmdk raw qed
            subcommand = commit
        - amend:
            no Host_RHEL.m6
            subcommand = amend
            start_vm = no
            images += " stg"
            image_name_stg = "images/stg"
            force_create_image_stg = yes
            remove_image_stg = yes
            check_image_stg = no
            variants:
                - upgrade:
                    image_extra_params_stg = "compat=0.10,"
                    qemu_img_options = compat
                    compat = 1.1
                - downgrade:
                    image_extra_params_stg = "compat=1.1,"
                    qemu_img_options = compat
                    compat = 0.10
                    variants:
                        - @default:
                        - refcount_bits:
                            required_qemu = [2.3.0, )
                            variants:
                                - refcount_bits_32:
                                    image_extra_params_stg += "refcount_bits=32,"
                                    check_output = stderr
                                    command_result_pattern = "(compat=0.10 requires refcount_bits=16)"
                                - refcount_bits_16:
                                    image_extra_params_stg += "refcount_bits=16,"
