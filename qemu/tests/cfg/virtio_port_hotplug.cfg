- virtio_port_hotplug:
    type = virtio_port_hotplug
    kill_vm = yes
    kill_vm_on_error = yes
    repeat_times = 100
    target_process = "python"
    guest_scripts = VirtIoChannel_guest_send_receive.py;windows_support.py
    host_script = serial_host_send_receive.py
    guest_script = VirtIoChannel_guest_send_receive.py
    clean_cmd = rm -f
    guest_script_folder = /var/tmp/
    Windows:
        driver_name = vioser
        guest_script_folder = C:\
        clean_cmd = del /f /q
        tmp_dir = %TEMP%
        python_bin = python
        target_process = ${python_bin}.exe
        i386, i686:
            devcon_dirname = 'x86'
        x86_64:
            devcon_dirname = 'amd64'
        devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
        cdroms += " virtio"
    Linux:
        modprobe_module = virtio_console
    variants:
        - unplug_chardev:
            serials += " vc1 vc2"
            serial_type_vc1 = virtserialport
            serial_type_vc2 = virtconsole
            file_transfer_serial_port = vc1
            unplug_device = vc1 vc2
            filesize = 200
            unplug_chardev_vc1 = yes
            unplug_chardev_vc2 = yes
            check_module = no
        - @unplug_port:
            serials += " vs1 vs2"
            serial_type_vs1 = virtserialport
            serial_type_vs2 = virtserialport
            unplug_device = vs1 vs2
            check_module = no
            unplug_chardev_vs1 = no
            unplug_chardev_vs2 = no
            filesize = 100
            variants:
                - @default:
                    bg_test = no
                    repeat_times = 1
                - with_bg_test:
                    Linux:
                        filesize = 400
        - unplug_port_chardev_pci:
            type = virtio_serial_unplug_port_chardev_pci
            sleep_time = 0.5
            serials += " vs1"
            serial_type_vs1 = virtserialport
        - hotplug_port_pci:
            type = virtio_serial_hotplug_port_pci
            start_vm = no
            extra_chardevs = "channel1 channel2"
            extra_serials = "port1 port2"
            serial_type_port1 = "virtserialport"
            serial_type_port2 = "virtserialport"
            shutdown_method = system_powerdown
            repeat_times = 1
            unplug_pci = yes
            memory_leak_check = yes
            variants:
                - @default:
                    plug_same_nr = yes
                    unplug_pci = no
                - with_reboot:
                    interrupt_test_after_unplug = reboot_guest
                    interrupt_test_after_plug = reboot_guest
                    reboot_method = shell
                - with_system_reset:
                    interrupt_test_after_unplug = reboot_guest
                    interrupt_test_after_plug = reboot_guest
                    reboot_method = system_reset
                    sleep_before_reset = 0
                - with_shutdown_after_unplug:
                    interrupt_test_after_unplug = shutdown_guest
                    memory_leak_check = no
                - with_shutdown_after_plug:
                    interrupt_test_after_plug = shutdown_guest
                    memory_leak_check = no
                - with_live_migration_after_unplug:
                    interrupt_test_after_unplug = live_migration_guest
                - repeat_pci_in_loop:
                    repeat_times = 100
                - without_chardev:
                    type = virtio_serial_hotplug_port_pci_chardev
                    start_vm = yes
                    extra_chardevs = "channel1"
                    extra_serials = "port1"
                    serial_type_port1 = "virtserialport"
                - with_console_negative:
                    type = hotplug_port_chardev_pci_with_console
                    start_vm = yes
                    serials += " vc1"
                    chardev_backend_vc1 = pty
                    serial_type_vc1 = virtconsole
                    extra_chardevs = "channel1"
                    extra_serials = "vs1"
                    serial_type_vs1 = virtserialport
                - max_chardevs:
                    type = virtio_serial_hotplug_max_chardevs
                    start_vm = yes
                    sleep_time = 1
                    extra_chardevs = "channel0"
                    numberic_chardev = 31
                    #Port number 0 on virtio-serial devices reserved for
                    #virtconsole devices for backward compatibility
                    virtio_serial_ports = 30
                    filesize = 200
        - remove_pending_watches:
            type = chardev_remove_pending_watches
            serials += " vs1"
            serial_type_vs1 = "virtserialport"
            file_transfer_serial_port = "vs1"
            filesize = 2000
        - hotplug_various_chardev:
            type = virtio_serial_various_chardev_hotplug
            serials = ""
            start_vm = yes
            extra_chardevs = "channel1 channel2 channel3 channel4 channel5 channel6"
            chardev_backend_channel2 = tcp_socket
            chardev_backend_channel3 = pty
            chardev_backend_channel4 = null
            chardev_backend_channel5 = file
            chardev_backend_channel6 = ringbuf
            ringbuf_write_size = 2048
            ringbuf_read_size = 1000
            ringbuf_data = 'adcdefgh'
            ringbuf_format = 'utf8'
        - hotplug_existed_port_pci:
            type = virtio_serial_hotplug_existed_port_pci
            serials += ' vs1 '
            serial_type_vs1 = 'virtserialport'
            chardev_backend_channel1 = "tcp_socket"
