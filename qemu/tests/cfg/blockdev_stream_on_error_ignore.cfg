# The following testing scenario is covered:
#   block stream test with on-error:ignore
#     The snapshot image is a local image(filesystem)


- blockdev_stream_on_error_ignore:
    only Linux
    start_vm = yes
    kill_vm = yes
    qemu_force_use_drive_expression = no
    type = blockdev_stream_on_error_ignore
    virt_test_type = qemu
    images += " data1"
    remove_image_data1 = yes
    force_create_image_data1 = yes
    source_images = data1
    snapshot_images = data1sn
    base_tag = data1
    node = drive_data1
    snapshot_tag = data1sn
    on_error = ignore
    storage_pools = default
    storage_pool = default
    rebase_mode = unsafe
    target_path = /tmp/tmp_target_path
    tempfile_size = 600M

    image_size_data1 = 2G
    image_size_data1sn = ${image_size_data1}
    image_format_data1 = qcow2
    image_format_data1sn = qcow2
    image_name_data1 = data1
    image_name_data1sn = data1sn

    error_msg = "No space left on device"

    nbd:
        nbd_port_data1 = 10831
        force_create_image_data1 = no
        remove_image_data1 = no
        image_format_data1 = raw
    iscsi_direct:
        lun_data1 = 1
    ceph:
        image_foramt_data1 = raw
    iscsi:
        lun_data1 = 1
        force_create_image_data1 = no
        remove_image_data1 = no
        image_format_data1 = raw

    # For local snapshot images
    storage_type_default = directory
    enable_iscsi_data1sn  = no
    enable_ceph_data1sn = no
    enable_gluster_data1sn = no
    enable_nbd_data1sn = no
    image_raw_device_data1sn = no

    # lvm setting
    vg_name = vg_test
    lv_name = lv_test
    lv_size = 1G
    block_raw_name = lvm_block
    emulated_image = images/${block_raw_name}
    emulated_image_size = ${image_size_data1}
    force_remove_image = yes
    remove_emulated_image = yes
    lv_extend_cmd = 'lvextend -L ${emulated_image_size} /dev/${vg_name}/${lv_name} && resize2fs /dev/${vg_name}/${lv_name}'
    storage_prepare_cmd = 'mkdir -p ${target_path} && mkfs.ext4 -F /dev/${vg_name}/${lv_name} && mount /dev/${vg_name}/${lv_name} ${target_path}'
    storage_clean_cmd = 'mountpoint -q ${target_path} && umount -f ${target_path}; rm -rf ${target_path}'
