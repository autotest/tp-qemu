- win_virtio_driver_update_by_installer:
    type = win_virtio_driver_update_by_installer
    only Windows
    virtio_win_media_type = iso
    cdroms += " virtio"
    cdrom_virtio_downgrade = isos/windows/virtio-win-downgrade.iso
    clone_master = yes
    master_images_clone = image1
    remove_image_image1 = yes
    cd_format_fixed = ide
    drive_format_image1 = ide
    q35:
        cd_format_fixed = ahci
        drive_format_image1 = ahci
    vio_driver_chk_cmd = 'driverquery /si | find /i "%s"'
    chk_timeout = 240
    sub_test_after_installer = win_msft_sign_check
    install_script_path = "WIN_UTILS:\install.au3"
    run_install_cmd = 'WIN_UTILS:\AutoIt3_%PROCESSOR_ARCHITECTURE%.exe C:\\install.au3'
    installer_pkg_check_cmd = 'wmic product get name |findstr "Virtio-win-driver-installer"'
    devcon_dirname = "win7_"
    i386:
        devcon_dirname += "x86"
        qemu_ga_pkg = qemu-ga-i386.msi
    x86_64:
        devcon_dirname += "amd64"
        qemu_ga_pkg = qemu-ga-x86_64.msi
    devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    del devcon_dirname
    gagent_install_cmd = "start /wait %s /quiet"
    gagent_pkg_info_cmd = 'wmic product where name="Qemu guest agent"'
    gagent_uninstall_cmd = "wmic product where name='Qemu guest agent' call uninstall"
    no_virtio_rng:
        virtio_rngs += " rng0"
        backend_rng0 = rng-random
        backend_type = passthrough
        filename_passthrough = /dev/random
    nics += " nic2"
    nic_model_nic1 = e1000
    nic_model_nic2 = virtio
    images += " stg0 stg1"
    image_name_stg0 = "images/stg0"
    image_name_stg1 = "images/stg1"
    image_size_stg0 = 5G
    image_size_stg1 = 5G
    drive_format_stg0 = virtio
    drive_format_stg1 = scsi-hd
    remove_image_stg0 = yes
    remove_image_stg1 = yes
    force_create_image_stg0 = yes
    force_create_image_stg1 = yes
    serials += " vs"
    serial_type_vs = virtserialport
    balloon = balloon0
    balloon_dev_devid = balloon0
    balloon_dev_add_bus = yes
    inputs = input1
    input_dev_bus_type_input1 = virtio
    input_dev_type_input1 = mouse
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_type = mount
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    fs_driver_props = {"queue-size": 1024}
    mem = 4096
    mem_devs = mem1
    backend_mem_mem1 = memory-backend-file
    mem-path_mem1 = /dev/shm
    size_mem1 = 4G
    use_mem_mem1 = no
    share_mem = yes
    guest_numa_nodes = shm0
    numa_memdev_shm0 = mem-mem1
    numa_nodeid_shm0 = 0
    fs_binary_extra_options = " -o cache=auto"
    variants:
        - @default:
        - from_old_installer:
            update_from_previous_installer = yes
