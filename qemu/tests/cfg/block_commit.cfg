# Below case works stablly on QMP monitor, but have no more test with Human
# monitor, so suggest to use QMP monitor as default qemu monitor run below test
#
- block_commit:
    no raw qed vmdk
    backup_image_before_testing = yes
    restore_image_after_testing = yes
    wait_finished = yes
    default_speed_image1 = 0
    snapshot_chain = "images/sn1 images/sn2 images/sn3 images/sn4"
    # If image size increase or limited committing please increase
    # wait_timeout to avoid wait for committing finished timeout;
    wait_timeout = 3900
    snapshot_format = qcow2
    kill_vm = yes
    alive_check_cmd = dir
    tmp_dir = /tmp
    base_image = "images/sn1"
    top_image = "images/sn3"
    expected_image_file = "images/sn1"
    Windows:
        create_command = "WIN_UTILS:\coreutils\DummyCMD.exe FILE 1073741824 1"
        file_names = "C:\live_commit_test"
        test_exists_cmd = "dir FILE"
        autostress = no
        start_cmd = '"${install_path}\heavyload.exe" \CPU 1 \MEMORY 1024'
        x86_64:
            sync_cmd = "WIN_UTILS:\Sync\sync64.exe /accepteula"
        i386, i686:
            sync_cmd = "WIN_UTILS:\Sync\sync.exe /accepteula"
    Linux:
        create_command = "dd if=/dev/urandom of=FILE bs=128k count=100"
        file_names = "/home/live_commit_test"
        test_exists_cmd = "test -f FILE"
        control_args = "--cpu 1 --vm 1 --vm-bytes 16M"
        sync_cmd = "sync"
    variants:
        - @default:
        - with_data_plane:
            only Host_RHEL.m7
            only virtio_blk virtio_scsi
            #Add a redundant iothread for testing purpose
            iothreads = "iothread0 iothread1"
            virtio_blk:
                blk_extra_params_image1 = "iothread=iothread0"
            virtio_scsi:
                no Host_RHEL.m7.u0, Host_RHEL.m7.u1, Host_RHEL.m7.u2
                bus_extra_params_image1 = "iothread=iothread0"
    variants:
        - with_payload:
            type = block_commit_stress
            variants:
                - with_stress:
                    wait_finished = no
                    wait_timeout = 120
                    before_start = "load_stress"
                    after_finished = "unload_stress verify_backingfile reboot verify_alive"
                - with_stop_cont:
                    before_start = "verify_alive stop"
                    after_finished = "resume reboot verify_alive"
                - with_reboot:
                    type = block_commit_reboot
                    reboot_method = "system_reset"
                    when_start = "reboot"
                    after_finished = "verify_alive"
        - general_operation:
            type = block_commit_complete
            expected_speed = 1024000
            when_start = "set_speed stop resume pause_job resume_job cancel start"
            after_finished = "verify_backingfile reboot verify_alive"
        - with_installation:
            type = block_commit_installation
            need_install = yes
            start_vm = no
            images = "stg"
            source_image = "stg"
            image_name_stg = "images/live_commit_installation"
            image_size_stg = 20G
            boot_drive_stg = yes
            medium = cdrom
            kernel = vmlinuz
            initrd = initrd.img
            force_create_image_stg = yes
            image_aio = threads
            unattended_delivery_method = cdrom
            cdroms += " unattended"
            index_enable = no
        - active_top:
            type = block_commit_active
