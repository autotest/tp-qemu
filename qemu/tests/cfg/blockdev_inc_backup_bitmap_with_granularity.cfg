# The following testing scenario is covered:
#   bitmap with granularity test
#     The backup images are local images(filesystem)

- blockdev_inc_backup_bitmap_with_granularity:
    only Linux
    start_vm = no
    kill_vm = yes
    qemu_force_use_drive_expression = no
    type = blockdev_inc_backup_bitmap_with_granularity
    virt_test_type = qemu
    images += " data1"
    source_images = data1
    image_backup_chain_data1 = base
    remove_image_data1 = yes
    force_create_image_data1 = yes
    storage_pools = default
    storage_pool = default
    storage_type_default = directory
    full_backup_options = '{"sync": "full"}'

    image_size_data1 = 2G
    image_size_base = ${image_size_data1}
    image_format_data1 = qcow2
    image_format_base = qcow2
    image_name_data1 = data1
    image_name_base = base

    nbd:
        nbd_port_data1 = 10831
        image_format_data1 = raw
        force_create_image_data1 = no
        remove_image_data1 = no
    iscsi_direct:
        lun_data1 = 1
    ceph:
        enable_ceph_base = no
        image_format_data1 = raw
    iscsi:
        lun_data1 = 1
        image_format_data1 = raw
        force_create_image_data1 = no
        remove_image_data1 = no

    variants:
        - granularity_512:
            granularity = 512
        - granularity_2G:
            granularity = 2G
        - granularity_between_512_2G:
            # Get a random one from (512, 2G)
            granularity_list = 1K 2K 4K 8K 16K 32K 64K 128K 256K 512K 1M 2M 4M 8M 16M 32M 64M 128M 256M 512M 1G
