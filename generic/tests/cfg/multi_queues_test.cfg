- multi_queues_test: install setup image_copy unattended_install.cdrom
    virt_test_type = qemu libvirt
    no smp2
    only Linux
    only virtio_net
    no RHEL.3, RHEL.4, RHEL.5
    no RHEL.6.0, RHEL.6.1, RHEL.6.2, RHEL.6.3, RHEL.6.4, RHEL.6.5
    no Host_RHEL.m5, Host_RHEL.m6
    type = multi_queues_test
    queues = 4
    kill_vm = yes
    tmp_dir = /home
    vhost = "vhost=on"
    enable_msix_vectors = yes
    variants:
        - with_netperf:
            hostpassword = redhat
            netperf_link = netperf-2.6.0.tar.bz2
            RHEL.4:
                netperf_link = netperf-2.4.5.tar.bz2
            server_path = /var/tmp/
            client_path = /var/tmp/
            netperf_test_duration = 360
            netperf_client = ${vms}
            netperf_server = localhost
            wait_bg_time = 60
            bg_sub_test = netperf_stress
            bg_stress_run_flag = netperf_run
            netperf_para_sessions = 2
            test_protocols = TCP_STREAM
            Windows:
                netperf_server_link_win = "netserver-2.6.0.exe"
                netperf_client_link_win = "netperf.exe"
                server_path_win = "c:\\"
                client_path_win = "c:\\"
            variants:
                - smp1:
                    smp_fixed = 1
                    vcpu_cores_fixed = 1
                    vcpu_threads_fixed = 1
                    vcpu_sockets_fixed = 1
                - smp4:
                    smp_fixed = 4
                    queues = ${smp_fixed}
                    vhostfds_len = ${smp_fixed}
                    tapfds_len = ${smp_fixed}
                    variants:
                        - single_netperf_session:
                            netperf_para_sessions = 1
                        - multiple_netperf_session:
                            netperf_para_sessions = ${smp_fixed}
                - max_queues:
                    smp_fixed = 8
                    queues = ${smp_fixed}
                    vhostfds_len = ${smp_fixed}
                    tapfds_len = ${smp_fixed}
                - cpu_affinity:
                    #this test smp must equal queues.
                    smp_fixed = 4
                    queues = ${smp_fixed}
                    vhostfds_len = ${smp_fixed}
                    tapfds_len = ${smp_fixed}
                    netperf_para_sessions = 1
                    netperf_taskset_cpu = 0
                    check_cpu_affinity = yes
        - invalid_queues_number:
            start_vm = no
            type = invalid_para_mq
            variants:
                - upper_border:
                    queues = 9
                    key_words = "Argument list too long"
                - lower_border:
                    queues = 0
                    key_words = "(No such device|Cannot bring up TAP)"
        - multi_nics:
            check_vhost_threads = no
            mac_filter = "HWaddr (.\w+:\w+:\w+:\w+:\w+:\w+)"
            ip_filter = "inet addr:(.\d+.\d+.\d+.\d+)"
            net_check_cmd = "ifconfig"
            # set 'strick_check = yes' to enable it.
            wait_bg_time = 0
            bg_sub_test = multi_vms_nics
            strick_check = no
            virt_test_type = qemu
            flood_minutes = 1
            transfer_timeout = 1000
            ping_counts = 10
            interface_mac_ip_filter = "(eth\d+).*?HWaddr (.\w+:\w+:\w+:\w+:\w+:\w+).*?inet addr:(.\d+.\d+.\d+.\d+)"
            Fedora.18, RHEL7:
                interface_mac_ip_filter = (\w+):.*inet (.\d+.\d+.\d+.\d+).*?ether (.\w+:\w+:\w+:\w+:\w+:\w+)
            file_create_cmd = "dd if=/dev/urandom of=/tmp/1 bs=100M count=1"
            # We can test multi nics in multi vms by setting nics.
            nics += " nic2"
            vms += " vm2"
            image_snapshot = yes
