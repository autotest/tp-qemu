- virtual_nic:
    virt_test_type = qemu
    image_snapshot = yes
    variants:
        - private:
            type = virtual_nic_private
            # Tempararily disable Win2012 as Windump and Win10pcap cannot be installed successfully
            no Win2012
            vms = "vm1 vm2 vm3"
            catch_date = "%s.* > %s.ssh"
            tcpdump_cmd = "tcpdump -s 0 -n tcp -vv port ssh and dst %s and src %s -i %s "
            dd_cmd = "dd if=/dev/urandom of=%s oflag=direct bs=1M count=%d"
            filesize = 100
            tcpdump_check_cmd = pgrep -f tcpdump.*ADDR1.*ADDR0
            tcpdump_kill_cmd = killall -9 tcpdump
            Windows:
                guest_windump_dir = C:\tools\
                tcpdump_cmd = ${guest_windump_dir}WinDump.exe -s 0 -n tcp port ssh and dst %s and src %s
                clean_cmd = del
                tmp_dir = C:\
                dd_cmd = D:\coreutils\DummyCMD.exe %s %s 1
                tcpdump_check_cmd = tasklist | findstr /I WinDump
                tcpdump_kill_cmd = taskkill /T /F /IM WinDump.exe
                copy_cmd = C:\tools\rss_client.py -u %s %s %s %s
                windump_path = "WIN_UTILS:\\WinDump.exe"
                winpcap_path = "WIN_UTILS:\\Win10Pcap-v10.2-5002.msi"
                npcap_install_cmd = ${guest_windump_dir}Win10Pcap-v10.2-5002.msi /quiet
        - send_buffer:
            type = virtual_nic_send_buffer
            # Parameters for file transfer
            filesize = 2000
            transfer_timeout = 600
            # dsthost configuration
            shell_port_dsthost = 22
            password_dsthost = redhat
            username_dsthost = root
            shell_prompt_dsthost = "^\[.*\][\#\$]\s*$"
            shell_client_dsthost = ssh
            # Parameters for sub_test netperf_stress
            netperf_client = ${vms}
            netperf_server = localhost
            hostpassword = redhat
            background_stress_test = netperf_stress
            netperf_link = netperf-2.6.0.tar.bz2
            server_path = /var/tmp/
            client_path = /var/tmp/
            RHEL.4:
                netperf_link = netperf-2.4.5.tar.bz2
            test_protocol = UDP_STREAM
            netperf_test_duration = 120
            netperf_para_sessions = 1
            ping_timeout = 60
            bg_stress_run_flag = netperf_run
            wait_bg_time = ${netperf_test_duration}
            Windows:
                netperf_server_link_win = netserver-2.6.0.exe
                netperf_client_link_win = netperf.exe
                server_path_win = "c:\\"
                client_path_win = "c:\\"
            variants:
                - zero_buf:
                    netdev_extra_params_nic1 = ',sndbuf=0'
                - opt_buf:
                    netdev_extra_params_nic1 = ',sndbuf=1048576'
                - default_buf:
                    #don't add 'sndbuf' option, buffer size is zero
        - with_stress:
            only Linux
            type = virtual_nic_stress
            count = 10
            flood_minutes = 25
            test_timeout = 1800
            Windows:
                # TODO, will support later
                autostress = yes
                stress_test = win_heavyload
                backup_image_before_testing = yes
                restore_image_after_testing = yes
                install_path = "C:\Program Files (x86)\JAM Software\HeavyLoad"
                config_cmd = 'setx -m path "%PATH%;${install_path};"'
                install_cmd = "start /wait DRIVE:\HeavyLoadSetup.exe /verysilent"
                stop_cmd = "taskkill /T /F /IM heavyload"
                x86_64:
                    install_path = "C:\Program Files (x86)\JAM Software\HeavyLoad"
                i386, i686:
                    install_path = "C:\Program Files\JAM Software\HeavyLoad"
