- win_virtio_driver_update_test:
    type = driver_in_use
    only Windows
    monitor_type = qmp
    monitors = qmp1
    cdroms += " virtio winutils"
    cd_format_fixed = ide
    q35:
        cd_format_fixed = ahci
    virtio_win_media_type = iso
    image_snapshot_image1 = yes
    kill_vm = yes
    kill_vm_on_error = yes
    check_guest_bsod = yes
    image_snapshot = yes
    login_timeout = 360
    suppress_exception = no
    sub_test = win_virtio_driver_update_test
    devcon_dirname = "win7_"
    Win2008..sp2:
        devcon_dirname = "wlh_"
    WinXP, Win2003:
        devcon_dirname = "wxp_"
    i386:
        devcon_dirname += "x86"
    x86_64:
        devcon_dirname += "amd64"
    devcon_path = "WIN_UTILS:\devcon\${devcon_dirname}\devcon.exe"
    del devcon_dirname
    variants:
        - uninstall_install:
            need_uninstall = yes
        - downgrade_upgrade:
            need_uninstall = no
            cdrom_virtio_downgrade = isos/windows/virtio-win-downgrade.iso
    variants:
        - before_bg_test:
            run_bg_flag = "before_bg_test"
        - during_bg_test:
            run_bg_flag = "during_bg_test"
            suppress_exception = yes
        - after_bg_test:
            run_bg_flag = "after_bg_test"
    variants:
        - with_balloon:
            driver_name = balloon
            balloon = balloon0
            balloon_dev_devid = balloon0
            balloon_dev_add_bus = yes
            driver_name = balloon
            device_name = "VirtIO Balloon Driver"
            device_hwid = '"PCI\VEN_1AF4&DEV_1002" "PCI\VEN_1AF4&DEV_1045"'
            driver_id_pattern = "(.*?):.*?VirtIO Balloon Driver"
            run_bgstress = balloon_check
            virtio_balloon_pause = 10.0
            free_mem_cmd = cat /proc/meminfo |grep MemFree
            run_sub_test_after_balloon = no
            test_tags = "evict enlarge"
            balloon_type_evict = evict
            balloon_type_enlarge = enlarge
        - with_netkvm:
            driver_name = netkvm
            nics += " nic2"
            nic_model_nic1 = rtl8139
            nic_model_nic2 = virtio
            device_name = "Red Hat VirtIO Ethernet Adapter"
            device_hwid = '"PCI\VEN_1AF4&DEV_1000" "PCI\VEN_1AF4&DEV_1041"'
            hostpassword = redhat
            target_process = netperf.exe
            run_bgstress = netperf_stress
            netperf_link = netperf-2.6.0.tar.bz2
            server_path = /var/tmp/
            client_path = /var/tmp/
            test_protocols = TCP_STREAM
            netperf_client = ${vms}
            netperf_server = localhost
            netperf_test_duration = 200
            wait_before_subtest = 100
            ping_ext_host = "yes"
            ext_host_get_cmd = "ip route | awk '/default/ { print $3 }'"
            shell_client = "nc"
        - with_viostor:
            driver_name = viostor
            device_name = "Red Hat VirtIO SCSI controller"
            device_hwid = '"PCI\VEN_1AF4&DEV_1001" "PCI\VEN_1AF4&DEV_1042"'
            target_process = iozone.exe
            run_bgstress = iozone_windows
            drive_format_image1 = ide
            q35:
                drive_format_image1 = ahci
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = virtio
            disk_letter = I
            disk_index = 1
            format_disk = yes
            force_create_image_stg = yes
            remove_image_stg = yes
            driver_id_pattern = "(.*?):.*?VirtIO SCSI Disk Device"
            iozone_cmd = "WIN_UTILS:\Iozone\iozone.exe -azR -r 64k -n 1G -g 2G -M -i 0 -i 1 -b iozone.xls -f ${disk_letter}:\testfile"
            iozone_timeout = 7200
            wait_bg_time = 180
        - with_vioscsi:
            driver_name = vioscsi
            device_name = "Red Hat VirtIO SCSI pass-through controller"
            device_hwid = '"PCI\VEN_1AF4&DEV_1004" "PCI\VEN_1AF4&DEV_1048"'
            target_process = iozone.exe
            run_bgstress = iozone_windows
            drive_format_image1 = ide
            q35:
                drive_format_image1 = ahci
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = scsi-hd
            disk_letter = I
            disk_index = 1
            format_disk = yes
            force_create_image_stg = yes
            remove_image_stg = yes
            driver_id_pattern = "(.*?):.*?VirtIO SCSI pass-through controller"
            iozone_cmd = "WIN_UTILS:\Iozone\iozone.exe -azR -r 64k -n 1G -g 2G -M -i 0 -i 1 -b iozone.xls -f ${disk_letter}:\testfile"
            iozone_timeout = 7200
            wait_bg_time = 180
        - with_viorng:
            no no_virtio_rng
            driver_name = viorng
            device_name = "VirtIO RNG Device"
            device_hwid = '"PCI\VEN_1AF4&DEV_1005" "PCI\VEN_1AF4&DEV_1044"'
            run_bgstress = rng_bat 
            target_process = random\w*.exe
            session_cmd_timeout = 240
            rng_data_rex = "0x\w"
            read_rng_cmd  = "WIN_UTILS:\random_%PROCESSOR_ARCHITECTURE%.exe"
            driver_id_pattern = "(.*?):.*?VirtIO RNG Device"
            i386:
                driver_id_cmd = 'WIN_UTILS:\devcon\wxp_x86\devcon.exe find * | find "VirtIO"'
                driver_check_cmd = "WIN_UTILS:\devcon\wxp_x86\devcon.exe status @DRIVER_ID"
            x86_64:
                driver_id_cmd = 'WIN_UTILS:\devcon\wnet_amd64\devcon.exe find * | find "VirtIO"'
                driver_check_cmd = "WIN_UTILS:\devcon\wnet_amd64\devcon.exe status @DRIVER_ID"
            during_bg_test:
                read_rng_cmd = for /l %i in (1, 1, 1000) do "WIN_UTILS:\random_%PROCESSOR_ARCHITECTURE%.exe"
                driver_check_cmd = ""
        - with_pvpanic:
            only before_bg_test
            no Host_RHEL.m6
            driver_name = pvpanic
            device_name = "QEMU PVPanic Device"
            device_hwid = '"ACPI\QEMU0001"'
            run_bgstress = pvpanic
            event_check = "GUEST_PANICKED"
            crash_method = nmi
            timeout = 360
            backup_image_before_testing = yes
            restore_image_after_testing = yes
            set_panic_cmd = 'wmic class stdregprov call SetDwordValue hDefKey="&h80000002" sSubKeyName="SYSTEM\CurrentControlSet\Control\CrashControl" sValueName="NMICrashDump" uValue=1'
