- win_sigverif:
    type = win_sigverif
    only Windows
    cdroms += " virtio winutils"
    kill_vm = yes
    run_sigverif_cmd = 'WIN_UTILS:\AutoIt3_%PROCESSOR_ARCHITECTURE%.exe WIN_UTILS:\sigverif.au3'
    sigverif_log = "c:\Users\Public\Documents\SIGVERIF.TXT"
    check_sigverif_cmd = 'type ${sigverif_log} | findstr /i "%s"'
    clean_sigverif_cmd = "del ${sigverif_log}"
    variants:
        - @default:
        - msft_sign_check:
            type = win_msft_sign_check
            vio_driver_chk_cmd = 'driverquery /si | find /i "%s"'
            chk_timeout = 240
    variants:
        - with_netkvm:
            only virtio_net
            driver_name = netkvm
            driver_verifier = ${driver_name}
            Win2016, Win2019, Win8..1, Win2012..r2:
                driver_verifier += " ndis"
            device_name = "Red Hat VirtIO Ethernet Adapter"
        - with_viorng:
            driver_name = viorng
            no_virtio_rng:
                virtio_rngs += " rng0"
                backend_rng0 = rng-random
                backend_type = passthrough
                filename_passthrough = /dev/urandom
            device_name = "VirtIO RNG Device"
        - with_viostor:
            driver_name = viostor
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 1G
            drive_format_stg = virtio
            force_create_image_stg = yes
            remove_image_stg = yes
            device_name = "Red Hat VirtIO SCSI controller"
        - with_vioscsi:
            driver_name = vioscsi
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 1G
            drive_format_stg = scsi-hd
            force_create_image_stg = yes
            remove_image_stg = yes
            device_name = "Red Hat VirtIO SCSI pass-through controller"
        - with_vioserial:
            driver_name = vioser
            serials += " vs"
            serial_type_vs = virtserialport
            device_name = "VirtIO Serial Driver"
        - with_balloon:
            driver_name = balloon
            balloon = balloon0
            balloon_dev_devid = balloon0
            balloon_dev_add_bus = yes
            device_name = "VirtIO Balloon Driver"
        - with_pvpanic:
            no Host_RHEL.m6
            driver_name = pvpanic
            device_name = "QEMU PVPanic Device"
        - with_vioinput:
            required_qemu = [2.4.0, )
            no Win2008..sp2
            driver_name = vioinput
            inputs = input1
            input_dev_bus_type_input1 = virtio
            input_dev_type_input1 = mouse
            device_name = "VirtIO Input Driver"
        - with_viofs:
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
            no Win2008 Win7
            Win10.i386:
                mem = 4096
            virt_test_type = qemu
            required_qemu = [4.2.0,)
            filesystems = fs
            fs_driver = virtio-fs
            fs_source_type = mount
            fs_source_dir = virtio_fs_test/
            force_create_fs_source = yes
            remove_fs_source = yes
            fs_target = 'myfs'
            fs_driver_props = {"queue-size": 1024}
            mem_devs = mem1
            backend_mem_mem1 = memory-backend-file
            mem-path_mem1 = /dev/shm
            size_mem1 = ${mem}M
            use_mem_mem1 = no
            share_mem = yes
            guest_numa_nodes = shm0
            numa_memdev_shm0 = mem-mem1
            numa_nodeid_shm0 = 0
            driver_name = viofs
            device_name = "VirtIO FS Device"
        - with_viomem:
            no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8
            no i386
            required_virtio_win_prewhql = [0.1.251, )
            required_virtio_win = [1.9.40.0, )
            maxmem_mem = 80G
            mem_fixed = 4096
            mem_devs = 'vmem0'
            vm_memdev_model_vmem0 = "virtio-mem"
            size_mem_vmem0 = 8G
            requested-size_memory_vmem0 = 1G
            memdev_memory_vmem0 = "mem-vmem0"
            driver_name = "viomem"
            device_name = "VirtIO Viomem Driver"
